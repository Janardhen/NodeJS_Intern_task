[{"/Users/jjanardhen/Desktop/JJ_intern_task/src/index.js":"1","/Users/jjanardhen/Desktop/JJ_intern_task/src/reportWebVitals.js":"2","/Users/jjanardhen/Desktop/JJ_intern_task/src/App.js":"3","/Users/jjanardhen/Desktop/JJ_intern_task/src/UserProfile.js":"4","/Users/jjanardhen/Desktop/JJ_intern_task/src/Users.js":"5","/Users/jjanardhen/Desktop/JJ_intern_task/src/UserInfo.js":"6"},{"size":455,"mtime":1618626824000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1618620696000,"results":"9","hashOfConfig":"8"},{"size":380,"mtime":1618635028000,"results":"10","hashOfConfig":"8"},{"size":3824,"mtime":1618635260000,"results":"11","hashOfConfig":"8"},{"size":1494,"mtime":1618618079536,"results":"12","hashOfConfig":"8"},{"size":2953,"mtime":1618634956000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13xnc1i",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/jjanardhen/Desktop/JJ_intern_task/src/index.js",[],["28","29"],"/Users/jjanardhen/Desktop/JJ_intern_task/src/reportWebVitals.js",[],"/Users/jjanardhen/Desktop/JJ_intern_task/src/App.js",[],"/Users/jjanardhen/Desktop/JJ_intern_task/src/UserProfile.js",["30","31"],"import React from 'react';\nimport { Bar, BarChart, AreaChart, Area, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport UserInfo from './UserInfo';\nimport ReactModal from 'react-modal';\n\nfunction getCharts() {\n    const data = [\n        {\n            name: 'Page A',\n            uv: 4000,\n            pv: 2400,\n            amt: 2400,\n        },\n        {\n            name: 'Page B',\n            uv: 3000,\n            pv: 1398,\n            amt: 2210,\n        },\n        {\n            name: 'Page C',\n            uv: 2000,\n            pv: 9800,\n            amt: 2290,\n        },\n        {\n            name: 'Page D',\n            uv: 2780,\n            pv: 3908,\n            amt: 2000,\n        },\n        {\n            name: 'Page E',\n            uv: 1890,\n            pv: 4800,\n            amt: 2181,\n        },\n        {\n            name: 'Page F',\n            uv: 2390,\n            pv: 3800,\n            amt: 2500,\n        },\n        {\n            name: 'Page G',\n            uv: 3490,\n            pv: 4300,\n            amt: 2100,\n        },\n    ];\n    return <>\n        <LineChart\n            width={1000}\n            height={300}\n            data={data}\n            margin={{\n                top: 50,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n        </LineChart>\n        <AreaChart\n            width={1000}\n            height={400}\n            data={data}\n            margin={{\n                top: 50,\n                right: 30,\n                left: 0,\n                bottom: 0,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        </AreaChart>\n        <BarChart\n            width={1000}\n            height={400}\n            data={data}\n            margin={{\n                top: 50,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n        </BarChart>\n    </>\n}\n\nexport default function UserProfile({ id }) {\n    const [userProfile, setUserProfile] = React.useState();\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        const fetchUsers = async () => {\n            const usersProfile = await fetch(\"../userdata.json\")\n                .then((response) => response.json());\n            const user = usersProfile.profile.filter(user => user.user.userid === id);\n            setUserProfile(user[0]);\n        };\n        fetchUsers();\n    }, []);\n\n    if (!userProfile) {\n        return <div>Loading user...</div>\n    }\n\n    return <>\n        <h1 className=\"title-pen\"> User Profile</h1>\n        <UserInfo userProfile={userProfile} />\n        <button className=\"btn first\" onClick={() => { setIsOpen(true); }}>Edit User Profile</button>\n        <div style={{ padding: \"50px 25%\" }}>\n            {getCharts()}\n        </div>\n        <ReactModal isOpen={isOpen} onRequestClose={() => { setIsOpen(false) }}>\n            <UserInfo userProfile={userProfile} isEditable={true} onClose={() => { setIsOpen(false); }} />\n        </ReactModal>\n    </>\n}","/Users/jjanardhen/Desktop/JJ_intern_task/src/Users.js",[],"/Users/jjanardhen/Desktop/JJ_intern_task/src/UserInfo.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":105,"nodeType":"38","messageId":"39","endLine":2,"endColumn":124},{"ruleId":"40","severity":1,"message":"41","line":122,"column":8,"nodeType":"42","endLine":122,"endColumn":10,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'ResponsiveContainer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [id]",{"range":"49","text":"50"},[3223,3225],"[id]"]
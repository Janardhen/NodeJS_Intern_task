{"ast":null,"code":"var _jsxFileName = \"/Users/jjanardhen/Desktop/JJ_intern_task/src/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Bar, BarChart, AreaChart, Area, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport UserInfo from './UserInfo';\nimport ReactModal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getCharts() {\n  const data = [{\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  }, {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  }, {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  }, {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  }, {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  }, {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 300,\n      data: data,\n      margin: {\n        top: 50,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"pv\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 1000,\n      height: 400,\n      data: data,\n      margin: {\n        top: 50,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 1000,\n      height: 400,\n      data: data,\n      margin: {\n        top: 50,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"pv\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\nexport default function UserProfile({\n  id\n}) {\n  _s();\n\n  const [userProfile, setUserProfile] = React.useState();\n  const [isOpen, setIsOpen] = React.useState(false);\n  React.useEffect(() => {\n    const fetchUsers = async () => {\n      const usersProfile = await fetch(\"../userdata.json\").then(response => response.json());\n      const user = usersProfile.profile.filter(user => user.user.userid === id);\n      setUserProfile(user[0]);\n    };\n\n    fetchUsers();\n  }, []);\n\n  if (!userProfile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-pen\",\n      children: \" User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n      userProfile: userProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn first\",\n      onClick: () => {\n        setIsOpen(true);\n      },\n      children: \"Edit User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"50px 25%\"\n      },\n      children: getCharts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isOpen,\n      onRequestClose: () => {\n        setIsOpen(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(UserInfo, {\n        userProfile: userProfile,\n        isEditable: true,\n        onClose: () => {\n          setIsOpen(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserProfile, \"Sx3khpfCLlxzqwUjb4wXjJSGsVk=\");\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/jjanardhen/Desktop/JJ_intern_task/src/UserProfile.js"],"names":["React","Bar","BarChart","AreaChart","Area","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","UserInfo","ReactModal","getCharts","data","name","uv","pv","amt","top","right","left","bottom","r","UserProfile","id","userProfile","setUserProfile","useState","isOpen","setIsOpen","useEffect","fetchUsers","usersProfile","fetch","then","response","json","user","profile","filter","userid","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Bar, BarChart, AreaChart, Area, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport UserInfo from './UserInfo';\nimport ReactModal from 'react-modal';\n\nfunction getCharts() {\n    const data = [\n        {\n            name: 'Page A',\n            uv: 4000,\n            pv: 2400,\n            amt: 2400,\n        },\n        {\n            name: 'Page B',\n            uv: 3000,\n            pv: 1398,\n            amt: 2210,\n        },\n        {\n            name: 'Page C',\n            uv: 2000,\n            pv: 9800,\n            amt: 2290,\n        },\n        {\n            name: 'Page D',\n            uv: 2780,\n            pv: 3908,\n            amt: 2000,\n        },\n        {\n            name: 'Page E',\n            uv: 1890,\n            pv: 4800,\n            amt: 2181,\n        },\n        {\n            name: 'Page F',\n            uv: 2390,\n            pv: 3800,\n            amt: 2500,\n        },\n        {\n            name: 'Page G',\n            uv: 3490,\n            pv: 4300,\n            amt: 2100,\n        },\n    ];\n    return <>\n        <LineChart\n            width={1000}\n            height={300}\n            data={data}\n            margin={{\n                top: 50,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n        </LineChart>\n        <AreaChart\n            width={1000}\n            height={400}\n            data={data}\n            margin={{\n                top: 50,\n                right: 30,\n                left: 0,\n                bottom: 0,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        </AreaChart>\n        <BarChart\n            width={1000}\n            height={400}\n            data={data}\n            margin={{\n                top: 50,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n        </BarChart>\n    </>\n}\n\nexport default function UserProfile({ id }) {\n    const [userProfile, setUserProfile] = React.useState();\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        const fetchUsers = async () => {\n            const usersProfile = await fetch(\"../userdata.json\")\n                .then((response) => response.json());\n            const user = usersProfile.profile.filter(user => user.user.userid === id);\n            setUserProfile(user[0]);\n        };\n        fetchUsers();\n    }, []);\n\n    if (!userProfile) {\n        return <div>Loading user...</div>\n    }\n\n    return <>\n        <h1 className=\"title-pen\"> User Profile</h1>\n        <UserInfo userProfile={userProfile} />\n        <button className=\"btn first\" onClick={() => { setIsOpen(true); }}>Edit User Profile</button>\n        <div style={{ padding: \"50px 25%\" }}>\n            {getCharts()}\n        </div>\n        <ReactModal isOpen={isOpen} onRequestClose={() => { setIsOpen(false) }}>\n            <UserInfo userProfile={userProfile} isEditable={true} onClose={() => { setIsOpen(false); }} />\n        </ReactModal>\n    </>\n}"]},"metadata":{},"sourceType":"module"}